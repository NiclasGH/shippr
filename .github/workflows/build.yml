name: Build Pipeline

on:
  push:
  pull_request:
    types: [opened, synchronize, reopened]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test
    env:
      RUSTFLAGS: "" # By default, warnings will cause the pipeline to fail
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - uses: Swatinem/rust-cache@v2

      - name: Install the Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: Check
        run: cargo check --all

      - name: Unit tests
        run: cargo test --lib

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Install the Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: rustfmt

      - uses: Swatinem/rust-cache@v2

      - name: Enforce formatting
        run: cargo fmt --all --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Install the Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: clippy

      - uses: Swatinem/rust-cache@v2

      - name: Linting
        run: cargo clippy --all -- -D warnings

  release-binary:
    if: github.ref_type == 'tag'
    needs: [test, fmt, clippy]
    name: Release - ${{ matrix.platform.os-name }}
    strategy:
      matrix:
        platform:
          - os-name: FreeBSD-x86_64
            runs-on: ubuntu-24.04
            target: x86_64-unknown-freebsd

          - os-name: Linux-x86_64
            runs-on: ubuntu-24.04
            target: x86_64-unknown-linux-musl

          - os-name: Linux-aarch64
            runs-on: ubuntu-24.04
            target: aarch64-unknown-linux-musl

          - os-name: RaspberryPi
            runs-on: ubuntu-24.04
            target: aarch64-unknown-linux-gnu

          - os-name: Linux-riscv64
            runs-on: ubuntu-24.04
            target: riscv64gc-unknown-linux-gnu

          - os-name: macOS-x86_64
            runs-on: macOS-latest
            target: x86_64-apple-darwin

    runs-on: ${{ matrix.platform.runs-on }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build binary
        uses: houseabsolute/actions-rust-cross@v1
        with:
          command: build
          target: ${{ matrix.platform.target }}
          args: "--locked --release"
          strip: true
          use-rust-cache: true

      - name: Rename binary and move to root
        shell: bash
        run: |
          BINARY_PATH=$(find . -name "shippr" -type f | head -1)
          mv "$BINARY_PATH" "./shippr-${{ matrix.platform.os-name }}"
          echo "Found binary at: $BINARY_PATH"
          ls -la ./shippr-*

      - name: Create checksum
        shell: bash
        run: |
          shasum -a 256 "./shippr-${{ matrix.platform.os-name }}" > "./shippr-${{ matrix.platform.os-name }}.checksum.sha256"
          cat ./shippr-*.sha256

      - name: Publish release artifacts
        uses: actions/upload-artifact@v4
        with:
          name: "shippr-${{ github.ref_name }}-${{ matrix.platform.os-name }}"
          path: |
            shippr-${{ matrix.platform.os-name }}*
            shippr-${{ matrix.platform.os-name }}*.sha256
          if-no-files-found: error

      - name: Add binary to GitHub Release ${{ github.ref_name }}
        uses: softprops/action-gh-release@v2
        with:
          draft: true
          files: shippr-${{ matrix.platform.os-name }}*


  release-metadata:
    if: github.ref_type == 'tag'
    needs: [release-binary]
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Add LICENSE to Release
        uses: softprops/action-gh-release@v2
        with:
          draft: true
          files: LICENSE
